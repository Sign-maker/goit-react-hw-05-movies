{"version":3,"file":"static/js/961.7252da13.chunk.js","mappings":"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","sources":["components/Informer/Informer.styled.jsx","configs/constants.js","configs/tmdb-config.js","pages/MovieDetails/MovieDetails.jsx","services-api/themoviedb-apt.js"],"sourcesContent":["import styled from 'styled-components';\nimport { INFO_TYPES } from 'configs/constants';\n\nexport const Informer = styled.p`\n  text-align: center;\n  color: ${props => {\n    let color = '';\n\n    switch (props.$infotype) {\n      case INFO_TYPES.error:\n        color = 'red';\n        break;\n      case INFO_TYPES.notification:\n        color = '#3f51b5';\n        break;\n      default:\n        color = 'black';\n    }\n    return color;\n  }};\n`;\n","export const STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n\nexport const INFO_TYPES = {\n  error: 'error',\n  notification: 'notification',\n};\n\nexport const REQUEST_TYPES = {\n  tranding: 'trending',\n  search: 'search',\n};\n","//прокинуть потом через контекст\nexport const TMDB_CONFIG = {\n  secure_base_url: 'https://image.tmdb.org/t/p/',\n  poster_sizes: 'w500',\n  profile_sizes: 'w185',\n};\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { TMDB_CONFIG } from 'configs/tmdb-config';\nimport { getMovieById } from 'services-api/themoviedb-apt';\nimport { Informer } from 'components/Informer/Informer.styled';\nimport { INFO_TYPES, STATUS } from 'configs/constants';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState(STATUS.idle);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function getItem() {\n      setStatus(STATUS.pending);\n      const data = await getMovieById(movieId, signal);\n      console.log(data);\n      setMovie(data);\n      setStatus(STATUS.resolved);\n    }\n\n    try {\n      getItem();\n    } catch (error) {\n      setStatus(STATUS.rejected);\n      setError(error);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {status === STATUS.resolved && (\n        <>\n          <Link to={backLinkRef.current}>\n            <span>&lt;=</span> Go back\n          </Link>\n          <section>\n            <div>\n              <img\n                src={`${TMDB_CONFIG.secure_base_url}${TMDB_CONFIG.poster_sizes}/${movie.poster_path}`}\n                alt=\"\"\n              />\n              <div>\n                <h2>{movie.title}</h2>\n                <p>{Math.round(+movie.vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h4>Genres</h4>\n                <ul>\n                  {movie.genres.map(({ id, name }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </section>\n          <section>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"review\">Reviews</Link>\n              </li>\n            </ul>\n\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </section>\n        </>\n      )}\n      {status === STATUS.pending && <Loader />}\n      {status === STATUS.error && (\n        <Informer\n          $infotype={INFO_TYPES.error}\n        >{`Oops, something went wrong! ${error.message}`}</Informer>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios1 from 'axios';\n\nconst axios = axios1.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'aa5059789a38bc93f2c5a690047de290',\n  },\n});\n\nexport async function getTrending(page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get('trending/movie/day', { params, signal });\n  return data;\n}\n\nexport async function getMoviesByTitle(query, page, signal) {\n  const params = { query, page };\n\n  const { data } = await axios.get('search/movie', { params, signal });\n  return data;\n}\n\nexport async function getMovieById(id, signal) {\n  const { data } = await axios.get(`movie/${id}`, { signal });\n  return data;\n}\n\nexport async function getMovieCredits(id, signal) {\n  const { data } = await axios.get(`movie/${id}/credits`, { signal });\n  return data;\n}\n\nexport async function getMovieReviews(id, page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get(`movie/${id}/reviews`, { params, signal });\n  return data;\n}\n"],"names":["Informer","styled","_templateObject","_taggedTemplateLiteral","props","color","$infotype","INFO_TYPES","STATUS","idle","pending","resolved","rejected","error","notification","TMDB_CONFIG","secure_base_url","poster_sizes","profile_sizes","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","status","setStatus","_useState5","_useState6","setError","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useEffect","abortController","AbortController","signal","_getItem","apply","arguments","getItem","abort","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieById","sent","console","log","stop","_jsxs","_Fragment","children","Link","to","current","_jsx","src","concat","poster_path","alt","title","Math","round","vote_average","overview","genres","map","_ref","id","name","Suspense","fallback","Loader","Outlet","message","axios","axios1","baseURL","params","api_key","getTrending","_x","_x2","_getTrending","page","_yield$axios$get","get","abrupt","getMoviesByTitle","_x3","_x4","_x5","_getMoviesByTitle","_callee2","query","_yield$axios$get2","_context2","_x6","_x7","_getMovieById","_callee3","_yield$axios$get3","_context3","getMovieCredits","_x8","_x9","_getMovieCredits","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x10","_x11","_x12","_getMovieReviews","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}