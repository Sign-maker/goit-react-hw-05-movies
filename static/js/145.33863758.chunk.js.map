{"version":3,"file":"static/js/145.33863758.chunk.js","mappings":"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","sources":["components/BtnLoadMore/BtnLoadMore.jsx","components/Informer/Informer.styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","configs/constants.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services-api/themoviedb-apt.js"],"sourcesContent":["export const BtnLoadMore = ({ handleLoadMore }) => (\n  <button onClick={handleLoadMore}>Load more</button>\n);\n","import styled from 'styled-components';\nimport { INFO_TYPES } from 'configs/constants';\n\nexport const Informer = styled.p`\n  text-align: center;\n  color: ${props => {\n    let color = '';\n\n    switch (props.$infotype) {\n      case INFO_TYPES.error:\n        color = 'red';\n        break;\n      case INFO_TYPES.notification:\n        color = '#3f51b5';\n        break;\n      default:\n        color = 'black';\n    }\n    return color;\n  }};\n`;\n","import { Link } from 'react-router-dom';\n\nexport const MovieItem = ({ id, title, state }) => (\n  <li>\n    <Link to={`/movies/${id}`} state={state}>\n      {title}\n    </Link>\n  </li>\n);\n","import { useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport const MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title }, idx) => (\n        <MovieItem key={idx} id={id} title={title} state={{ from: location }} />\n      ))}\n    </ul>\n  );\n};\n","export const STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n\nexport const INFO_TYPES = {\n  error: 'error',\n  notification: 'notification',\n};\n\nexport const REQUEST_TYPES = {\n  tranding: 'trending',\n  search: 'search',\n};\n","import { useId } from 'react';\n\nexport const SearchForm = ({ value, onSubmit }) => {\n  const queryInputId = useId();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value.trim();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      SearchForm\n      <label htmlFor={queryInputId} />\n      <input\n        id={queryInputId}\n        type=\"text\"\n        defaultValue={value}\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BtnLoadMore } from 'components/BtnLoadMore/BtnLoadMore';\nimport { INFO_TYPES, STATUS } from 'configs/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { Informer } from 'components/Informer/Informer.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { getMoviesByTitle } from 'services-api/themoviedb-apt';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(STATUS.idle);\n  const [loadMore, setLoadMore] = useState(false);\n  const [error, setError] = useState(null);\n\n  const query = useMemo(() => searchParams.get('query') ?? '', [searchParams]);\n\n  useEffect(() => {\n    if (!query) return;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function getItems() {\n      setStatus(STATUS.pending);\n      const { results, total_pages } = await getMoviesByTitle(\n        query,\n        page,\n        signal\n      );\n\n      setLoadMore(page < total_pages);\n      setItems(state => [...state, ...results]);\n      setStatus(STATUS.resolved);\n    }\n\n    try {\n      getItems();\n    } catch (error) {\n      setStatus(STATUS.rejected);\n      setError(error);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [query, page]);\n\n  const updateQueryString = query => {\n    if (query === '') {\n      setSearchParams({});\n      return;\n    }\n\n    setItems([]);\n    setPage(1);\n    setSearchParams({ query });\n  };\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const showItems =\n    (status === STATUS.resolved || loadMore) && items.length > 0;\n  const showNoItemsWarning = status === STATUS.resolved && !items.length;\n  const showLoader = status === STATUS.pending;\n  const showLoadMore = status === STATUS.resolved && loadMore;\n  const showError = status === STATUS.rejected;\n\n  return (\n    <>\n      <SearchForm onSubmit={updateQueryString} value={query} />\n      {showItems && <MoviesList items={items} />}\n      {showNoItemsWarning && (\n        <Informer\n          $infotype={INFO_TYPES.notification}\n        >{`No items found! Please, try another query!`}</Informer>\n      )}\n      {showLoader && <Loader />}\n      {showLoadMore && <BtnLoadMore handleLoadMore={handleLoadMore} />}\n      {showError && (\n        <Informer\n          $infotype={INFO_TYPES.error}\n        >{`Oops, something went wrong! ${error.message}`}</Informer>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios1 from 'axios';\n\nconst axios = axios1.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'aa5059789a38bc93f2c5a690047de290',\n  },\n});\n\nexport async function getTrending(page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get('trending/movie/day', { params, signal });\n  return data;\n}\n\nexport async function getMoviesByTitle(query, page, signal) {\n  const params = { query, page };\n\n  const { data } = await axios.get('search/movie', { params, signal });\n  return data;\n}\n\nexport async function getMovieById(id, signal) {\n  const { data } = await axios.get(`movie/${id}`, { signal });\n  return data;\n}\n\nexport async function getMovieCredits(id, signal) {\n  const { data } = await axios.get(`movie/${id}/credits`, { signal });\n  return data;\n}\n\nexport async function getMovieReviews(id, page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get(`movie/${id}/reviews`, { params, signal });\n  return data;\n}\n"],"names":["BtnLoadMore","_ref","handleLoadMore","_jsx","onClick","children","Informer","styled","_templateObject","_taggedTemplateLiteral","props","color","$infotype","INFO_TYPES","MovieItem","id","title","state","Link","to","concat","MoviesList","items","location","useLocation","map","_ref2","idx","from","STATUS","idle","pending","resolved","rejected","error","notification","SearchForm","value","onSubmit","queryInputId","useId","_jsxs","event","preventDefault","query","target","elements","trim","htmlFor","type","defaultValue","name","autoComplete","autoFocus","placeholder","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setItems","_useState3","_useState4","page","setPage","_useState5","_useState6","status","setStatus","_useState7","_useState8","loadMore","setLoadMore","_useState9","_useState10","setError","useMemo","_searchParams$get","get","useEffect","abortController","AbortController","signal","_getItems","apply","arguments","getItems","abort","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesByTit","results","total_pages","_context","prev","next","getMoviesByTitle","sent","_toConsumableArray","stop","showItems","length","showNoItemsWarning","showLoader","showLoadMore","showError","_Fragment","Loader","prevPage","message","axios","axios1","baseURL","params","api_key","getTrending","_x","_x2","_getTrending","_yield$axios$get","data","abrupt","_x3","_x4","_x5","_getMoviesByTitle","_callee2","_yield$axios$get2","_context2","getMovieById","_x6","_x7","_getMovieById","_callee3","_yield$axios$get3","_context3","getMovieCredits","_x8","_x9","_getMovieCredits","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x10","_x11","_x12","_getMovieReviews","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}