{"version":3,"file":"static/js/547.7e926b9f.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/Informer/Informer.styled.jsx","configs/constants.js","configs/tmdb-config.js","services-api/themoviedb-apt.js"],"sourcesContent":["import { TMDB_CONFIG } from 'configs/tmdb-config';\n\nexport const CastItem = ({ character, profile_path, name }) => (\n  <li>\n    {profile_path && (\n      <img\n        src={`${TMDB_CONFIG.secure_base_url}${TMDB_CONFIG.profile_sizes}/${profile_path}`}\n        alt=\"\"\n      />\n    )}\n    <h4>{name}</h4>\n    <p>{character}</p>\n  </li>\n);\n","import { CastItem } from 'components/CastItem/CastItem';\n\nexport const CastList = ({ items }) => (\n  <ul>\n    {items.map(({ cast_id, character, profile_path, name }) => (\n      <CastItem\n        key={cast_id}\n        character={character}\n        profile_path={profile_path}\n        name={name}\n      />\n    ))}\n  </ul>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastList } from 'components/CastList/CastList';\nimport { Informer } from 'components/Informer/Informer.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { INFO_TYPES, STATUS } from 'configs/constants';\nimport { getMovieCredits } from 'services-api/themoviedb-apt';\n\nconst Cast = () => {\n  const [items, setItems] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function getItems() {\n      setStatus(STATUS.pending);\n      const { cast } = await getMovieCredits(movieId, signal);\n      setItems(cast);\n      setStatus(STATUS.resolved);\n    }\n\n    try {\n      getItems();\n    } catch (error) {\n      setStatus(STATUS.rejected);\n      setError(error);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  const showItems = status === STATUS.resolved && items.length > 0;\n  const showNoItemsWarning = status === STATUS.resolved && !items.length;\n  const showLoader = status === STATUS.pending;\n  const showError = status === STATUS.rejected;\n\n  return (\n    <>\n      {showItems && <CastList items={items} />}\n      {showNoItemsWarning && (\n        <Informer\n          $infotype={INFO_TYPES.notification}\n        >{`No items found!`}</Informer>\n      )}\n      {showLoader && <Loader />}\n      {showError && (\n        <Informer\n          $infotype={INFO_TYPES.error}\n        >{`Oops, something went wrong! ${error.message}`}</Informer>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { INFO_TYPES } from 'configs/constants';\n\nexport const Informer = styled.p`\n  text-align: center;\n  color: ${props => {\n    let color = '';\n\n    switch (props.$infotype) {\n      case INFO_TYPES.error:\n        color = 'red';\n        break;\n      case INFO_TYPES.notification:\n        color = '#3f51b5';\n        break;\n      default:\n        color = 'black';\n    }\n    return color;\n  }};\n`;\n","export const STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n\nexport const INFO_TYPES = {\n  error: 'error',\n  notification: 'notification',\n};\n\nexport const REQUEST_TYPES = {\n  tranding: 'trending',\n  search: 'search',\n};\n","//прокинуть потом через контекст\nexport const TMDB_CONFIG = {\n  secure_base_url: 'https://image.tmdb.org/t/p/',\n  poster_sizes: 'w500',\n  profile_sizes: 'w185',\n};\n","import axios1 from 'axios';\n\nconst axios = axios1.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'aa5059789a38bc93f2c5a690047de290',\n  },\n});\n\nexport async function getTrending(page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get('trending/movie/day', { params, signal });\n  return data;\n}\n\nexport async function getMoviesByTitle(query, page, signal) {\n  const params = { query, page };\n\n  const { data } = await axios.get('search/movie', { params, signal });\n  return data;\n}\n\nexport async function getMovieById(id, signal) {\n  const { data } = await axios.get(`movie/${id}`, { signal });\n  return data;\n}\n\nexport async function getMovieCredits(id, signal) {\n  const { data } = await axios.get(`movie/${id}/credits`, { signal });\n  return data;\n}\n\nexport async function getMovieReviews(id, page, signal) {\n  const params = { page };\n\n  const { data } = await axios.get(`movie/${id}/reviews`, { params, signal });\n  return data;\n}\n"],"names":["CastItem","_ref","character","profile_path","name","_jsxs","children","_jsx","src","concat","TMDB_CONFIG","alt","CastList","items","map","_ref2","cast_id","_useState","useState","_useState2","_slicedToArray","setItems","_useState3","STATUS","_useState4","status","setStatus","_useState5","_useState6","error","setError","movieId","useParams","useEffect","abortController","AbortController","signal","_getItems","apply","arguments","getItems","abort","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieCredit","cast","_context","prev","next","getMovieCredits","sent","stop","showItems","length","showNoItemsWarning","showLoader","showError","_Fragment","Informer","$infotype","INFO_TYPES","Loader","message","styled","_templateObject","_taggedTemplateLiteral","props","color","idle","pending","resolved","rejected","notification","secure_base_url","poster_sizes","profile_sizes","axios","axios1","baseURL","params","api_key","getTrending","_x","_x2","_getTrending","page","_yield$axios$get","data","get","abrupt","getMoviesByTitle","_x3","_x4","_x5","_getMoviesByTitle","_callee2","query","_yield$axios$get2","_context2","getMovieById","_x6","_x7","_getMovieById","_callee3","id","_yield$axios$get3","_context3","_x8","_x9","_getMovieCredits","_callee4","_yield$axios$get4","_context4","getMovieReviews","_x10","_x11","_x12","_getMovieReviews","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}